displayConfig {
  sourceResolution {width = 2560, height = 1440}
}

keybinds {
  AuctionFarm_start = [
    {type = keyDown, keyEvent = VK_CONTROL}
    {type = onKeyDown, keyEvent = VK_NUMPAD1}
  ]

  InfluenceFarm_start = [
    {type = keyDown, keyEvent = VK_CONTROL}
    {type = onKeyDown, keyEvent = VK_NUMPAD2}
  ]

  DeleteAllCars = [
    {type = keyDown, keyEvent = VK_CONTROL}
    {type = onKeyDown, keyEvent = VK_NUMPAD4}
  ]

  StartWheelSpinning = [
    {type = keyDown, keyEvent = VK_CONTROL}
    {type = onKeyDown, keyEvent = VK_NUMPAD5}
  ]
}

hotkeys = {
  AuctionFarm_start {
    global = false
    module = auctionFarming
    action = verifyMainMenu
  }

  InfluenceFarm_start {
    global = false
    module = influenceFarming
    action = purchaseCar
  }

  DeleteAllCars {
    global = false
    module = QualityOfLife
    action = deleteAllCars
  }

  StartWheelSpinning {
    global = false
    module = QualityOfLife
    action = wheelSpinning_init
  }
}

onStuck {
  delay = 120000
  module = onStuck
  action = hibernate
}

actions {
  auctionFarming {
    verifyMainMenu = [
      {type = tapKey, keyEvent = VK_ENTER, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {
        type = probeScreen
        pixelStateCollection = ${pixelStateCollections.auctionReady} // check if the auction loaded early, this often saves a few milliseconds
        actionNameIfMatch = auctionReady
        actionNameElse = null
      }
      {
        type = probeScreen
        pixelStateCollection = ${pixelStateCollections.auctionFound} // auction exists, but isn't responsive yet
        actionNameIfMatch = auctionFound
        actionNameElse = null
      }
      // no auction exists, rollback and try again
      {type = logMessage, message = "no auction found"}
      {type = tapKey, keyEvent = VK_ESCAPE, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = changeToAction, actionName = verifyMainMenu}
    ]

    auctionFound = [
      {type = waitForPixelState, pixelStateCollection = ${pixelStateCollections.auctionReady}}
      {type = changeToAction, actionName = auctionReady}
    ]

    auctionReady = [
      {type = logMessage, message = "auction ready"}
      {type = wait, duration = 30} // wait just a little longer, sometimes the menu is unresponsive even after the prompt showed up
      {type = tapKey, keyEvent = VK_Y, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = tapKey, keyEvent = VK_DOWN, duration = 30}
      {type = wait, duration = 10}
      // spam the buyout button, can't be bothered to time this properly and spamming is faster than reading pixels
      {type = repeat, count = 12, action = [
        {type = tapKey, keyEvent = VK_ENTER, duration = 15}
        {type = wait, duration = 15}
      ]}

      // hopefully we won the auction, either way, rollback pattern is the same from here
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15} // accepts auction result
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = tapKey, keyEvent = VK_ESCAPE, duration = 15} // exit auction options
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = tapKey, keyEvent = VK_ESCAPE, duration = 15} // exit auction house
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = changeToAction, actionName = verifyMainMenu}
    ]
  }

  // purchases the Jeep Cj5 Renegade for 60k CR and buys skills to obtain influence
  influenceFarming {
    purchaseCar = [
      {type = tapKey, keyEvent = VK_ENTER, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = tapKey, keyEvent = VK_Y, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = repeat, count = 5, action = [
        {type = tapKey, keyEvent = VK_DOWN, duration = 30}
        {type = wait, duration = 60}
      ]}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15}
      {type = wait, duration = 100}
      {type = repeat, count = 31, action = [
        {type = tapKey, keyEvent = VK_DOWN, duration = 30}
        {type = wait, duration = 60}
      ]}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15}
      {type = wait, duration = 100}
      {type = tapKey, keyEvent = VK_ESCAPE, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}

      {type = wait, duration = 60}
      {type = tapKey, keyEvent = VK_RIGHT, duration = 15}
      {type = wait, duration = 15}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15} // select car
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = tapKey, keyEvent = VK_Y, duration = 15}
      // fix this
      {type = runAction, action = ${helperActions.strictWaitForMenuInteractive}}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15}
      {type = wait, duration = 345}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15} // confirm color
      {type = wait, duration = 345}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15} // confirm purchase
      {type = wait, duration = 9000} // *very* long purchase animation...
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = changeToAction, actionName = purchaseComplete}
    ]

    purchaseComplete = [
      {type = tapKey, keyEvent = VK_ESCAPE, duration = 15}
      {type = wait, duration = 1000}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = tapKey, keyEvent = VK_PAGE_DOWN, duration = 15}
      {type = wait, duration = 500}
      {type = tapKey, keyEvent = VK_RIGHT, duration = 15}
      {type = wait, duration = 50}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = tapKey, keyEvent = VK_DOWN, duration = 15}
      {type = wait, duration = 50}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}

      // pick either
      {type = runAction, action = ${helperActions.perkSelectAndConfirm}} // costs 1 point, gives 5.2k infl
      //{type = runAction, action = ${helperActions.pointEfficientInfluenceFarm}} // costs 2 points, gives 5.4k infl and a wheelspin

      {type = tapKey, keyEvent = VK_ESCAPE, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = tapKey, keyEvent = VK_ESCAPE, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}

      // delete the previous car to save on garage space (makes this fully afk-able as well)
      {type = tapKey, keyEvent = VK_LEFT, duration = 15}
      {type = wait, duration = 30}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = tapKey, keyEvent = VK_Y, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = repeat, count = 4, action = [
        {type = tapKey, keyEvent = VK_DOWN, duration = 30}
        {type = wait, duration = 60}
      ]}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15}
      {type = wait, duration = 100}
      {type = repeat, count = 32, action = [
        {type = tapKey, keyEvent = VK_DOWN, duration = 30}
        {type = wait, duration = 60}
      ]}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15}
      {type = wait, duration = 100}
      {type = tapKey, keyEvent = VK_ESCAPE, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = wait, duration = 60}
      {type = tapKey, keyEvent = VK_UP, duration = 15}
      {type = wait, duration = 15}
      {type = runAction, action = ${helperActions.deleteCar}}
      {type = tapKey, keyEvent = VK_ESCAPE, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}

      // car sold, rollback and repeat
      {type = tapKey, keyEvent = VK_PAGE_UP, duration = 15}
      {type = wait, duration = 500}
      {type = changeToAction, actionName = purchaseCar}
    ]
  }

  QualityOfLife {
    deleteAllCars = [
      {type = runAction, action = ${helperActions.deleteCar}}
      {type = changeToAction, actionName = deleteAllCars}
    ]

    wheelSpinning_init = [
      {type = tapKey, keyEvent = VK_ENTER, duration = 15}
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = changeToAction, actionName = wheelSpinning}
    ]

    wheelSpinning = [
      {type = tapKey, keyEvent = VK_ENTER, duration = 15} // skip animation
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15} // accept and next
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = wait, duration = 60}
      {
        type = probeScreen
        pixelStateCollection = ${pixelStateCollections.wheelSpinRewardIsCar}
        actionNameIfMatch = null // fallthrough for handling car rewards
        actionNameElse = wheelSpinning // otherwise the next wheelspin is already running, repeat
      }
      {type = tapKey, keyEvent = VK_DOWN, duration = 15} // select sell option
      {type = wait, duration = 60}
      {type = tapKey, keyEvent = VK_ENTER, duration = 15} // press sell button
      {type = runAction, action = ${helperActions.waitForMenuInteractive}}
      {type = changeToAction, actionName = wheelSpinning} // wheelspin skip is ready, repeat
    ]
  }

  onStuck {
    hibernate = [
      {type = tapKey, keyEvent = VK_END, duration = 30} // I tend to record my farming sessions for debugging, this is my "stop recording" shortcut
      {type = wait, duration = 5000} // let's really make sure the recording got saved properly
      {type = execCommand, command = "shutdown /h"}
    ]
  }
}


// Helper Stuff that is substituted

colors {
  white {red = 255, green = 255, blue = 255}
  menuInteractiveRangeStart {red = 75, green = 75, blue = 75}
  menuInteractiveRangeEnd {red = 255, green = 255, blue = 255}
  strictMenuInteractiveRangeStart {red = 230, green = 230, blue = 230}
  strictMenuInteractiveRangeEnd {red = 255, green = 255, blue = 255}
  wheelSpinCarRewardTeal {red = 0, green = 181, blue = 146}
}

pixelStateCollections {
  auctionFound = [
    {type = ExactPixelMatch, x = 166, y = 407, rgb = ${colors.white}}
    {type = ExactPixelMatch, x = 166, y = 567, rgb = ${colors.white}}
    {type = ExactPixelMatch, x = 933, y = 447, rgb = ${colors.white}}
    {type = ExactPixelMatch, x = 520, y = 507, rgb = ${colors.white}}
    {type = ExactPixelMatch, x = 653, y = 240, rgb = ${colors.white}}
  ]

  auctionReady = [
    {type = ExactPixelMatch, x = 1486, y = 525, rgb = ${colors.white}}
    {type = ExactPixelMatch, x = 1559, y = 525, rgb = ${colors.white}}
    {type = ExactPixelMatch, x = 1486, y = 558, rgb = ${colors.white}}
    {type = ExactPixelMatch, x = 1559, y = 558, rgb = ${colors.white}}
  ]

  menuInteractiveCheck = [
    {type = RangedPixelMatch, x = 112, y = 1334, rgbFrom = ${colors.menuInteractiveRangeStart}, rgbTo = ${colors.menuInteractiveRangeEnd}}
    {type = RangedPixelMatch, x = 112, y = 1346, rgbFrom = ${colors.menuInteractiveRangeStart}, rgbTo = ${colors.menuInteractiveRangeEnd}}
    {type = RangedPixelMatch, x = 118, y = 1346, rgbFrom = ${colors.menuInteractiveRangeStart}, rgbTo = ${colors.menuInteractiveRangeEnd}}
    {type = RangedPixelMatch, x = 117, y = 1334, rgbFrom = ${colors.menuInteractiveRangeStart}, rgbTo = ${colors.menuInteractiveRangeEnd}}
  ]

  strictMenuInteractiveCheck = [
    {type = RangedPixelMatch, x = 112, y = 1334, rgbFrom = ${colors.strictMenuInteractiveRangeStart}, rgbTo = ${colors.strictMenuInteractiveRangeEnd}}
    {type = RangedPixelMatch, x = 112, y = 1346, rgbFrom = ${colors.strictMenuInteractiveRangeStart}, rgbTo = ${colors.strictMenuInteractiveRangeEnd}}
    {type = RangedPixelMatch, x = 118, y = 1346, rgbFrom = ${colors.strictMenuInteractiveRangeStart}, rgbTo = ${colors.strictMenuInteractiveRangeEnd}}
    {type = RangedPixelMatch, x = 117, y = 1334, rgbFrom = ${colors.strictMenuInteractiveRangeStart}, rgbTo = ${colors.strictMenuInteractiveRangeEnd}}
  ]

  wheelSpinRewardIsCar = [
    {type = ExactPixelMatch, x = 933, y = 587, rgb = ${colors.wheelSpinCarRewardTeal}}
    {type = ExactPixelMatch, x = 933, y = 600, rgb = ${colors.wheelSpinCarRewardTeal}}
    {type = ExactPixelMatch, x = 933, y = 620, rgb = ${colors.wheelSpinCarRewardTeal}}
    {type = ExactPixelMatch, x = 947, y = 587, rgb = ${colors.white}}
    {type = ExactPixelMatch, x = 947, y = 600, rgb = ${colors.white}}
    {type = ExactPixelMatch, x = 947, y = 620, rgb = ${colors.white}}
  ]
}

// all helper actions (actions that will be used in several places) can be placed here
helperActions {
  waitForMenuInteractive = [
    {type = wait, duration = 200}
    {type = waitForPixelState, pixelStateCollection = ${pixelStateCollections.menuInteractiveCheck}}
  ]

  strictWaitForMenuInteractive = [
    {type = wait, duration = 200}
    {type = waitForPixelState, pixelStateCollection = ${pixelStateCollections.strictMenuInteractiveCheck}}
  ]

  perkSelectAndConfirm = [
    {type = tapKey, keyEvent = VK_ENTER, duration = 15}
    {type = runAction, action = ${helperActions.waitForMenuInteractive}}
    {type = tapKey, keyEvent = VK_ENTER, duration = 15}
    {type = runAction, action = ${helperActions.waitForMenuInteractive}}
  ]

  pointEfficientInfluenceFarm = [
    {type = runAction, action = ${helperActions.perkSelectAndConfirm}}
    {type = tapKey, keyEvent = VK_RIGHT, duration = 15}
    {type = wait, duration = 15}
    {type = runAction, action = ${helperActions.perkSelectAndConfirm}}
  ]

  deleteCar = [
    {type = tapKey, keyEvent = VK_ENTER, duration = 15}
    {type = runAction, action = ${helperActions.waitForMenuInteractive}}
    {type = repeat, count = 4, action = [
      {type = tapKey, keyEvent = VK_DOWN, duration = 15}
      {type = wait, duration = 60}
    ]}
    {type = tapKey, keyEvent = VK_ENTER, duration = 15} // press delete button
    {type = runAction, action = ${helperActions.waitForMenuInteractive}}
    {type = tapKey, keyEvent = VK_ENTER, duration = 15} // confirm deletion
    {type = wait, duration = 1500} // wait for massive menu lag (great game, 10/10)
  ]
}